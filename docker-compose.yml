version: '3.4'

services:
  pgserver:
    image: postgres
    ports:
      - 5439:5432
    container_name: kafkacdc_postgres
    environment:
      - POSTGRES_USER=adm
      - POSTGRES_PASSWORD=adm
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - pgdata:/var/lib/postgresql/data

  elasticsearch:
    image: 'elasticsearch:6.6.0'
    ports:
      - 9209:9200
      - 9300:9300
    container_name: kafkacdc_elastic
    restart: always
    environment:
      - discovery.type=single-node
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9093:9093"
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    depends_on:
      - zookeeper
      - pgserver

  connector:
    image: debezium/connect:0.10
    ports:
      - "8083:8083"
    container_name: connector
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - zookeeper
      - pgserver
      - kafka

  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    container_name: kafka-manager
    ports:
      - "9009:9000"
    links:
     - zookeeper
     - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    depends_on:
      - zookeeper
      - pgserver
      - kafka

  kafkacdc.kafkaconnectconfigureconsole:
    image: ${DOCKER_REGISTRY-}kafkacdckafkaconnectconfigureconsole
    build:
      context: .
      dockerfile: KafkaCDC.KafkaConnectConfigureConsole/Dockerfile
    depends_on:
      - kafka

  kafkacdc.filldataconsole:
    image: ${DOCKER_REGISTRY-}kafkacdcfilldataconsole
    build:
      context: .
      dockerfile: KafkaCDC.FillDataConsole/Dockerfile
    depends_on:
      - kafka
      - pgserver
      - kafkacdc.kafkaconnectconfigureconsole

  kafkacdc.projectionconsole:
    image: ${DOCKER_REGISTRY-}kafkacdcprojectionconsole
    build:
      context: .
      dockerfile: KafkaCDC.ProjectionConsole/Dockerfile
    depends_on:
      - kafkacdc.kafkaconnectconfigureconsole
      - kafka
      - pgserver
      - elasticsearch

  kafkacdc.queryapi:
    image: ${DOCKER_REGISTRY-}kafkacdcqueryapi
    build:
      context: .
      dockerfile: KafkaCDC.QueryApi/Dockerfile
    depends_on:
      - kafkacdc.kafkaconnectconfigureconsole
      - elasticsearch

volumes:
  pgdata: